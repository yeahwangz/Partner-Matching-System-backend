<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek01.yupaoBackend.mapper.UserMapper">
    <select id="selectUsersByTagsName" parameterType="java.util.List" resultType="com.geek01.yupaoBackend.domain.User">
        select * from user
        where isDelete=0 and userRole=0 and
        <foreach collection="list" item="tag" separator="and">
            tags like concat('%',#{tag},'%')
        </foreach>
    </select>

    <select id="getUserByUserAccount" parameterType="java.lang.String" resultType="com.geek01.yupaoBackend.domain.User">
        select * from user
        where userRole=0 and userAccount=#{userAccount}
    </select>

    <insert id="addNewUserAndReturnUserId" parameterType="com.geek01.yupaoBackend.domain.User"
            useGeneratedKeys="true" keyProperty="id">
        insert into user (userAccount,userPassword) values (#{userAccount},#{userPassword})
    </insert>

    <update id="editUserInfoByCookie" parameterType="com.geek01.yupaoBackend.domain.User">
        update user
        <set>
            <if test="userName != null">userName = #{userName},</if>
            <if test="avatarUrl != null">avatarUrl=#{avatarUrl},</if>
            <if test="gender != null">gender=#{gender},</if>
            <if test="phone != null">phone=#{phone},</if>
            <if test="email != null">email=#{email},</if>
            <if test="tags != null">tags=#{tags},</if>
            <if test="profile != null">profile=#{profile},</if>
        </set>
        where id = #{id}
    </update>

    <select id="getUserById" parameterType="java.lang.Long" resultType="com.geek01.yupaoBackend.domain.User">
        select * from user
        where userRole=0 and id =#{id}
    </select>
    
    <update id="updateAvatarUrlByUser" parameterType="com.geek01.yupaoBackend.domain.User">
        update user set avatarUrl = #{avatarUrl} where id = #{id}
    </update>

    <select id="selectUsersHaveTagsByCursor" resultMap="userResultMap" parameterType="java.lang.Long">
        select *
        from user_tag_forsearch
        where tags IS NOT NULL and userId != #{userId}
    </select>

    <select id="queryCountUsersHaveTags" resultType="java.lang.Integer">
        select count(*) from user_tag_forsearch
        where tags IS NOT NULL
    </select>

    <select id="getUserToRecommendVO" parameterType="java.util.List"
            resultType="com.geek01.yupaoBackend.domain.vo.UserToRecommendVO">
        select * from user
        where userStatus = 0 and isDelete=0 and userRole=0 and
        id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.userId}
        </foreach>
    </select>

    <select id="getAllUserNum" resultType="java.lang.Long">
        select count(*) from user
        where userStatus = 0 and isDelete = 0 and userRole = 0
    </select>

    <select id="getNormalUserOnePage" parameterType = "java.util.Map"
            resultType="com.geek01.yupaoBackend.domain.vo.UserToRecommendVO">
        select *
        from user
        limit #{everyPageSize} offset #{offset}
    </select>

    <insert id="createNewTeam" parameterType="com.geek01.yupaoBackend.domain.po.TeamPO"
    useGeneratedKeys="true" keyProperty="id">
        insert into team
        <trim prefix="(" suffix=")" suffixOverrides=",">
            teamName,
            <if test="profile != null">profile,</if>
            <if test="tags != null">tags,</if>
            <if test="avatarUrl != null">avatarUrl,</if>
            currentMember,
            historyMember,
            historyLeader
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            #{teamName},
            <if test="profile != null">#{profile},</if>
            <if test="tags != null">#{tags},</if>
            <if test="avatarUrl != null">#{avatarUrl},</if>
            #{currentMember},
            #{historyMember},
            #{historyLeader}
        </trim>
    </insert>

    <select id="getTeamById" parameterType="java.lang.Long" resultType="com.geek01.yupaoBackend.domain.po.TeamPO">
        select * from team
        where id = #{teamId}
    </select>

    <select id="getAllTeamNum" resultType="java.lang.Long">
        select count(*) from team
        where isDelete = 0
    </select>

    <select id="getNormalTeamOnePage" parameterType = "java.util.Map"
            resultType="com.geek01.yupaoBackend.domain.vo.TeamVO">
        select *
        from team
        limit #{everyPageSize} offset #{offset}
    </select>

    <select id="selectTeamsHaveTagsByCursor" resultMap="teamResultMap" parameterType="java.lang.Long">
        select *
        from team_tag_forsearch
        where tags IS NOT NULL and teamId != #{id}
    </select>

    <select id="getTeamVO" parameterType="java.util.List"
            resultType="com.geek01.yupaoBackend.domain.vo.TeamVO">
        select * from team
        where isDelete = 0 and
        id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.teamId}
        </foreach>
    </select>

    <update id="updateTeamAvatarUrl">
        update team set avatarUrl = #{imageUrl} where id = #{teamId}
    </update>

    <select id="getTeamIdListByUserId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select id from team
        where json_contains(currentMember,json_array(#{userId}))
    </select>

    <update id="joinTeam">
        update team set currentMember = json_array_append(currentMember,'$',#{userId}),
                        historyMember = json_array_append(historyMember,'$',#{userId})
                    where id = #{teamId};
    </update>

    <select id="getCurrentTeamLeaderId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select json_unquote(json_extract(historyLeader,concat('$[',json_length(historyLeader)-1,']'))) from team
        where id = #{teamId}
    </select>

    <update id="updateTeam">
        update team 
        <set>
            <if test="teamDTO.teamName != null">teamName = #{teamDTO.teamName},</if>
            <if test="teamDTO.profile != null">profile = #{teamDTO.profile},</if>
            <if test="teamDTO.tags != null">tags = #{teamDTO.tags},</if>
            <if test="teamDTO.avatarUrl != null">avatarUrl = #{teamDTO.avatarUrl},</if>
        </set>
        where id = #{teamId};
    </update>

    <!-- 自定义结果映射 -->
    <resultMap id="userResultMap" type="com.geek01.yupaoBackend.domain.po.UserSimilarPO">
        <result property="userId" column="userId"/>
        <result property="tags" column="tags"/>
    </resultMap>

    <resultMap id="teamResultMap" type="com.geek01.yupaoBackend.domain.po.TeamSimilarPO">
        <result property="teamId" column="teamId"/>
        <result property="tags" column="tags"/>
    </resultMap>

    <!--mp-->
    <!--<resultMap id="BaseResultMap" type="com.geek01.yupaoBackend.domain.User">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userName" column="userName" jdbcType="VARCHAR"/>
        <result property="userAccount" column="userAccount" jdbcType="VARCHAR"/>
        <result property="tags" column="tags" jdbcType="VARCHAR"/>
        <result property="avatarUrl" column="avatarUrl" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="TINYINT"/>
        <result property="userPassword" column="userPassword" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="userStatus" column="userStatus" jdbcType="INTEGER"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
        <result property="userRole" column="userRole" jdbcType="INTEGER"/>
        <result property="planetCode" column="planetCode" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,userName,tags,userAccount,
        avatarUrl,gender,userPassword,
        phone,email,userStatus,
        createTime,updateTime,isDelete,
        userRole,planetCode
    </sql>-->
</mapper>
